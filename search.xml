<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown 語法紀錄</title>
    <url>/2022/05/11/MarkDown%20%E8%AA%9E%E6%B3%95%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<p>嘗試在這邊紀錄一下 Markdown 語法</p>
<h2 id="h2">h2</h2>
<h3 id="h3">h3</h3>
<h4 id="h3-code-segment">h3 code segment</h4>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hamutaro is cutee ! "</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<h3 id="測試-emoji">測試 emoji</h3>
<p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>
<h3 id="測試-latex-mathjaxpandoc-renderer">測試 latex ( mathjax、pandoc
renderer )</h3>
<p><a href="https://pandoc.org/demos.html">pandoc</a></p>
<p><span class="math inline">\(\frac{1}{2}\)</span></p>
<h4 id="雙-測試">雙 {} 測試</h4>
<p><span class="math inline">\(\frac{1}{  {(2\pi)}^\frac{D}{2}}\)</span></p>
<h3 id="矩陣">矩陣</h3>
<p><span class="math display">\[
\begin{matrix} a&amp;b\\c&amp;d \end{matrix}\quad
\begin{pmatrix} a&amp;b\\c&amp;d \end{pmatrix}\quad
\begin{bmatrix} a&amp;b\\c&amp;d \end{bmatrix}\quad
\begin{Bmatrix} a&amp;b\\c&amp;d \end{Bmatrix}\quad
\begin{vmatrix} a&amp;b\\c&amp;d \end{vmatrix}\quad
\begin{Vmatrix} a&amp;b\\c&amp;d \end{Vmatrix}\quad
\]</span></p>
<p><span class="math display">\[
  X(m, n) = \left.
  \begin{cases}
    x(n), &amp; \text{for } 0 \leq n \leq 1 \\
    x(n - 1), &amp; \text{for } 0 \leq n \leq 1 \\
    x(n - 1), &amp; \text{for } 0 \leq n \leq 1
  \end{cases}
  \right\} = xy
\]</span></p>
<p><span class="math display">\[
A=\begin{bmatrix}
    a_{11} &amp; \dots &amp; a_{1n}\\
    \vdots &amp; \ddots &amp; \vdots\\
    0 &amp;\dots &amp; a_{nn}
\end{bmatrix}_{n \times n}
\]</span></p>
]]></content>
      <categories>
        <category>學習紀錄</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>gdb 初體驗</title>
    <url>/2022/05/11/gdb%E5%88%9D%E9%AB%94%E9%A9%97/</url>
    <content><![CDATA[<p>學 C 要夠逼，gdb 肯定是要會的。</p>
<p>除錯器(debugger)，可以在一個精準受控的環境下執行另一個程式。例如:
單步執行程式，跟蹤程式，查看變數內容，記憶體地址，以及程式中每一條指令指行完畢後CPU暫存器的變化情況，檢視程式呼叫堆疊等等。</p>
<p>gdb，全名為gnu
debugger，是在GNU軟體系統中的標準除錯器，介面為互動式的shell，許多類Unix，如:FreeBSD,
Linux等作業系統中都能夠使用，支援許多語言，包括C, C++等。 <span id="more"></span>
詳細的gdb使用手冊，可以在shell中輸入info gdb查閱。</p>
<h2 id="如何使用-gdb">如何使用 gdb</h2>
<ol type="1">
<li>在輸出 executable file 時設定 debugger 選項 <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">gcc -g -o excutableFile sourceFile.c</span><br></pre></td></tr></tbody></table></figure></li>
<li>gdb 只能輸入 binary file 來執行 ( 同一個目錄底下 ) <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">gdb ./executableFileName</span><br></pre></td></tr></tbody></table></figure> (
<u> ./ </u> 是用來執行 executable file 的用法 ) ## GDB commands gdb
指令也可以透過 tab 鍵自己補全 ### ask for help</li>
</ol>
<ul>
<li>help <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) help commandName</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h3 id="breakpoint">breakpoint</h3>
<ul>
<li>create breakpoint <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) break functionName</span><br></pre></td></tr></tbody></table></figure></li>
<li>check all breakpoints <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) info break</span><br></pre></td></tr></tbody></table></figure></li>
<li>delete the breakpoint <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) del breakpointNumber</span><br></pre></td></tr></tbody></table></figure></li>
<li>continue After checking some information we want know, we might want
the program to continue (c) <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) continue</span><br></pre></td></tr></tbody></table></figure> ### run</li>
<li>show the entire codes of the file <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) list</span><br></pre></td></tr></tbody></table></figure></li>
<li>run(r) the file <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) run</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h3 id="backtrace-and-frame-super-important"><strong>backtrace and
frame</strong> (super important)</h3>
<ul>
<li>backtrace (bt) <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) backtrace</span><br></pre></td></tr></tbody></table></figure> #### frame A frame is one of the
program states in the backtrace. We can switch to a frame we want, and
to check some information in that frame.</li>
<li>frame(f) <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) frame</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h3 id="disassemble-super-important"><strong>disassemble</strong> (super
important)</h3>
<ul>
<li>disassemble <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">(gdb) disassemble functionName</span><br></pre></td></tr></tbody></table></figure> ### cheat sheet <img data-src="https://i.imgur.com/AojRA0X.jpg"> <img data-src="https://i.imgur.com/VIgWdQg.png"></li>
</ul>
<h3 id="ref">REF</h3>
<p>https://tigercosmos.xyz/post/2020/09/system/debug-gdb/ ## GDB
extensions</p>
]]></content>
      <categories>
        <category>學習紀錄</category>
      </categories>
      <tags>
        <tag>GDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 基本操作</title>
    <url>/2022/05/11/hexo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>學習紀錄</category>
      </categories>
  </entry>
  <entry>
    <title>計算機網路概論</title>
    <url>/2022/05/12/%E8%A8%88%E7%AE%97%E6%A9%9F%E7%B6%B2%E8%B7%AF%E6%A6%82%E8%AB%96/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>OCW notes</category>
      </categories>
      <tags>
        <tag>computer nework</tag>
      </tags>
  </entry>
</search>
